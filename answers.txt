1) Ассоциативные контейнеры в целом используются для хранения и получения доступа к элементам
характеризующимся каким-то параметром (ключем). к контейнерах типа multi
отсутствует требование уникальности ключей. Поэтому при поиске элемента по ключу может вернутся
не один элемент, а несколько
2) быстрая, детерминированная, равномерная. Отдельные требования предъявляются к криптографическим хэш функциям
(например требование лавинного эффекта или невозможность обратного вычисления)
3)Коллизии возникают из-за того что пространство хэшей имеет меньшую размерность,
чем просранство отображаемых объектов (иначе и смысла в хэш функциях не будет).
Разрешать их можно методом цепочек (хэш указывает не на один элеемнт, а на несколько
 с одинаковыми хэшами) и методом вставок (при совпадении хэша берется хэш от хэша
 и новое место проверяется на занятость и т.д)
 4) Обычно сложность основных операций хэш таблиц O(1)
  (За это их и используют в основном). Но из-за коллизий одному хэшу может соответсововать
  несколько элементов. И поэтому для поиска или вставки придется поочередно по ним перемещаться.
   В худшем случае когда все N элементов имеют одинаковый хэш,придется сделать N операций и сложность
   возрастет до O(N)
 5)Создать свой собственный контейнер прикрутив к нему любые необходимые виды адресации
 и организации данных (произвольный доступ, отсортированный по определенному полю, хэш таблица и т.д)
